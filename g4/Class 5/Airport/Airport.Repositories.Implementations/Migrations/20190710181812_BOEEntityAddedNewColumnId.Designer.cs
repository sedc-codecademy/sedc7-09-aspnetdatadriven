// <auto-generated />
using System;
using Airport.Repositories.Implementations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Airport.Repositories.Implementations.Migrations
{
    [DbContext(typeof(AirportDbContext))]
    [Migration("20190710181812_BOEEntityAddedNewColumnId")]
    partial class BOEEntityAddedNewColumnId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Airport.Entities.BusinessObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("OpeningTime");

                    b.Property<int>("Type");

                    b.Property<TimeSpan>("WorkingTime");

                    b.HasKey("Id");

                    b.ToTable("BusinessObjects");
                });

            modelBuilder.Entity("Airport.Entities.BusinessObjectEmployee", b =>
                {
                    b.Property<int>("BusinessObjectId");

                    b.Property<int>("ResponsibleEmployeeId");

                    b.Property<int>("Id");

                    b.HasKey("BusinessObjectId", "ResponsibleEmployeeId");

                    b.HasIndex("ResponsibleEmployeeId");

                    b.ToTable("BusinessObjectEmployee");
                });

            modelBuilder.Entity("Airport.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Airport.Entities.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusinessObjectId");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<float>("DiscountPercentage");

                    b.Property<decimal>("Price");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("BusinessObjectId");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("Airport.Entities.BusinessObjectEmployee", b =>
                {
                    b.HasOne("Airport.Entities.BusinessObject", "BusinessObject")
                        .WithMany("ResponsibleEmployees")
                        .HasForeignKey("BusinessObjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Airport.Entities.Employee", "ResponsibleEmployee")
                        .WithMany("ResponsibleFor")
                        .HasForeignKey("ResponsibleEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Airport.Entities.Offer", b =>
                {
                    b.HasOne("Airport.Entities.BusinessObject", "BusinessObject")
                        .WithMany("Offers")
                        .HasForeignKey("BusinessObjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
